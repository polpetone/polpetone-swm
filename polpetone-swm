#!/bin/python3
import argparse 
import subprocess
from subprocess import DEVNULL
import yaml
import os
import tempfile


HOME=os.getenv("HOME")
CONFIG_FOLDER=HOME+"/.polpetone-swm"
CONFIG=CONFIG_FOLDER+'/config.yml'
INITIAL_CONFIG = "webpages: "+CONFIG_FOLDER+"/webpages.yml \n" +\
                 "browser: firefox"
INITIAL_WEBPAGES =  "github:\n" +\
                    "   - https://github.com\n" +\
                    "   - https://github.com/polpetone\n" +\
                    "google: https://google.de"

def read_pages(pages_file):
    with open(pages_file) as f:
        pages = yaml.load(f)
    return pages

def read_config(config_file):
    with open(config_file) as f:
        config = yaml.load(f) 
    return config

def create_config_if_not_exists():
    if not os.path.exists(CONFIG_FOLDER):
        os.makedirs(CONFIG_FOLDER)
        with open(CONFIG,'w') as f:
            f.write(INITIAL_CONFIG)
        with open(CONFIG_FOLDER+"/webpages.yml",'w') as f:
            f.write(INITIAL_WEBPAGES)


if __name__ == "__main__": 
    create_config_if_not_exists()

    parser = argparse.ArgumentParser()
    parser.add_argument('query', nargs='+')
    args = parser.parse_args()

    config = read_config(CONFIG)
    
    browser = config['browser']
    cmd = browser + " "
    web_pages_file = config['webpages']
    pages = read_pages(web_pages_file)

    if len(args.query) == 0:
        for k in pages.keys():
            print(k)
    else:
        if args.query[0] in pages.keys():
            value = pages.get(args.query[0])
            if type(value) is list:
                for query in value:
                    cmd += query
                    cmd += " "
            else: 
                cmd += value

        else:
            search_query = "+".join(str(x) for x in args.query)
            cmd += "https://duckduckgo.com/?q="+search_query
            cmd += " "
            cmd += "https://www.google.de/search?q="+search_query

        process = subprocess.Popen(cmd.split(), stdout=DEVNULL, stderr=DEVNULL)






